{"version":3,"sources":["services/auth.service.js","components/Login.js","actions/auth.js","services/auth-header.js","services/user.service.js","actions/file.js","images/download-icon.svg","images/check-circle-icon.svg","actions/query.js","components/Query/QueryFormParts/TimeOptions.js","components/Query/QueryFormParts/BayOptions.js","components/Query/QueryFormParts/QuantitiesOptions.js","components/Query/QueryForm.js","components/Query/QueryFormExample.js","components/Query/QueryResult.js","components/Database.js","components/Profile.js","components/About.js","components/NotFound.js","helpers/history.js","App.js","actions/message.js","reducers/auth.js","reducers/message.js","reducers/file.js","reducers/queryInputInit.js","reducers/query.js","reducers/index.js","store.js","index.js","client-mode/mode.js","actions/types.js","reportWebVitals.js"],"names":["authService","checkAddUserForLogin","username","password","a","requestConfig","params","axios","get","API_URL","then","response","data","accessToken","Error","localStorage","setItem","JSON","stringify","Promise","resolve","catch","reason","reject","removeUserForLogout","removeItem","Login","dispatch","useDispatch","useSelector","state","auth","isLoggingIn","isLoggedIn","message","useState","setUsername","setPassword","to","className","clientIsInDemoMode","src","alt","onSubmit","e","preventDefault","type","LOGIN_START","AuthService","LOGIN_SUCCESS","payload","user","toString","LOGIN_FAIL","SET_MESSAGE","login","htmlFor","name","value","onChange","target","disabled","role","authHeader","parse","getItem","userService","getUserDbInfo","queryObj","extraOption","getDbFile","responseType","headers","paramsSerializer","qs","arrayFormat","dateStamp","today","responseFileName","moment","format","fileDownload","filename","dbQueryObj","GET_FILE_START","UserService","GET_FILE_SUCCESS","GET_FILE_FAIL","setQueryInput","queryInput","QUERY_INPUT_SET","getQueryResults","QUERY_START","query","QUERY_SUCCESS","queryResult","QUERY_FAIL","daysAgoOptions","label","TimeOptions","timeOptions","intvlStart","intvlFinal","reportDate","timeSearchSel","setTimeOption","selection","newQueryInput","produce","draftState","timeItems","uuid","heading","content","Form","Field","id","defaultInputValue","option","options","dateFormat","selected","date","selectsStart","startDate","endDate","maxDate","selectsEnd","preExpanded","expandedUUIDs","map","item","bayOptionValues","BayOptions","bayOption","index","checked","setBayOption","QuantitiesOptions","quantities","netSales","netMoney","vehicles","toggleQtySel","category","combined","cash","credit","unRefunded","account","employee","works","premium","deluxe","express","onClick","numSelected","Object","values","qtyObj","valueForAllQty","entries","qtyType","keys","qty","toggleQtyAll","QueryForm","isQuerying","QueryFormExample","queryExampleInput","setQueryExampleInput","getQtySubContentDisplay","arr","el","title","net","getQtyPerDayDisplay","reportForWeekday","reportForDate","netForDay","QueryResult","resultArr","timeOption","qtyResults","bayMessage","generateBayMessage","timeMessage","intvl","intervalStr","int","interval","daysAgo","days","start","startwkday","final","finalwkday","generateTimeMessage","qtyDisplay","getQtyDisplay","FileInteractor","file","isGettingFile","getFileFailed","getDatabaseFile","downloadIcon","checkmarkIcon","Database","currentUser","queryFailed","Date","clientIsInExampleMode","Profile","About","href","NotFound","history","createBrowserHistory","App","useEffect","listen","location","CLEAR_MESSAGE","LOGOUT","exact","path","component","initialState","isLogginIn","yesterday","weekAgo","setDate","getDate","timeOptionsInit","demoToday","demoYesterday","demoWeekAgo","getDemoTimeInit","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","basedomain","domainArray","global","hostname","split","length","splice","ReactDOM","render","StrictMode","document","getElementById","reportWebVitals","clientModeExports","module","exports","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.749e4d40.chunk.js","sourcesContent":["import axios from 'axios'\n\n\nconst API_URL = '/api/auth/'\n\nconst checkAddUserForLogin = async (username, password) => {\n  // On the receiving end, the params will become the request.query.\n  const requestConfig = { params: { username, password } }\n\n  return axios.get(API_URL + 'signin', requestConfig)\n    .then(response => {\n      // Resolved\n      if (response.data.accessToken) {\n        localStorage.setItem('user', JSON.stringify(response.data))\n      }\n      else {\n        throw new Error('Unable to get user token.')\n      }\n      return Promise.resolve(response.data)\n    })\n    .catch(reason => {\n      // Rejected\n      return Promise.reject(reason)\n    })\n}\n\nconst removeUserForLogout = () => {\n  localStorage.removeItem('user')\n}\n\n\nconst authService = {\n  checkAddUserForLogin,\n  removeUserForLogout,\n}\n\nexport default authService","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { login } from '../actions/auth'\nimport './Login.css'\n\nimport { clientIsInDemoMode } from '../client-mode/mode'\n\n\nconst Login = () => {\n  const dispatch = useDispatch()\n  const { isLoggingIn, isLoggedIn } = useSelector(state => state.auth)\n  const { message } = useSelector(state => state.message)\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const onChangeUsername = (e) => { setUsername(e.target.value) }\n  const onChangePassword = (e) => { setPassword(e.target.value) }\n\n  const handleLogin = (e) => {\n    e.preventDefault()\n    dispatch(login(username, password))\n  }\n\n  if (isLoggedIn) {\n    return <Redirect to=\"/database\" />\n  }\n\n  return (\n    <div className=\"center\">\n      <div className=\"col-md-12\">\n\n        {clientIsInDemoMode && (\n          <div className=\"card card-container intro-to-demo-mode\">\n            <h3>DEMO MODE</h3>\n            <p>\n              Imagine you are the owner of an automatic carwash business and\n              you'd like to examine your automatically-generated sales\n              reports using this web-app.\n            </p>\n            <p>\n              Imagine the date is 2021 July 25.\n            </p>\n            <p>\n              Use the following to log in:\n            </p>\n            <div>\n              <table className=\"center-table\">\n                <tbody>\n                  <tr>\n                    <td className=\"table-left\">Username:</td>\n                    <td className=\"table-right\">theuser</td>\n                  </tr>\n                  <tr>\n                    <td className=\"table-left\">Password:</td>\n                    <td className=\"table-right\">thepassword</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <form onSubmit={handleLogin}>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"username\"\n                value={username}\n                onChange={onChangeUsername}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={password}\n                onChange={onChangePassword}\n              />\n            </div>\n\n            <div className=\"form-group add-space\">\n              <button className=\"btn btn-primary btn-block\" disabled={isLoggingIn}>\n                {isLoggingIn && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Login</span>\n              </button>\n            </div>\n\n            {message && (\n              <div className=\"form-group add-space\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {message}\n                </div>\n              </div>\n            )}\n\n          </form>\n        </div>\n\n        <div className=\"bottom-spacing\"/>\n\n      </div>\n    </div>\n  )\n}\n\nexport default Login","import { LOGIN_START, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, SET_MESSAGE } from './types'\nimport AuthService from '../services/auth.service'\n\n\nexport const login = (username, password) => (dispatch) => {\n  dispatch({\n    type: LOGIN_START,\n  })\n  return AuthService.checkAddUserForLogin(username, password)\n    .then(data => {\n      // Resolved\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: { user: data },\n      })\n    })\n    .catch((reason) => {\n      // Rejected\n      const message =\n        (reason.response &&\n          reason.response.data &&\n          reason.response.data.message) ||\n        reason.message ||\n        reason.toString()\n\n      dispatch({\n        type: LOGIN_FAIL,\n      })\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      })\n    })\n}\n\nexport const logout = () => (dispatch) => {\n  AuthService.removeUserForLogout()\n  dispatch({ type: LOGOUT })\n}","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'))\n\n  if (user && user.accessToken) {\n    // for Node.js Express back-end with JWT (JSON Web Tokens)\n    return { 'x-access-token': user.accessToken }\n  } else {\n    return {}\n  }\n}","import axios from 'axios'\nimport qs from 'qs'\nimport authHeader from './auth-header'\nimport fileDownload from 'js-file-download'\nimport moment from 'moment'\n\n\nconst API_URL = '/api/'\n\nconst getUserDbInfo = (queryObj) => {\n\n  let extraOption\n  if (queryObj.getDbFile) {\n    // If downloading a csv file, response data must be a 'blob'.\n    extraOption = { responseType: 'blob' }\n  }\n  else {\n    extraOption = {}\n  }\n\n  // On the receiving end, the params will become the request.query.\n  const requestConfig = {\n    headers: authHeader(),\n    ...extraOption,\n    params: queryObj,\n    paramsSerializer: function (params) {\n      return qs.stringify(params, {arrayFormat: 'brackets'})\n    },\n  }\n\n  if (queryObj.getDbFile) {\n    return axios.get(API_URL + 'query', requestConfig)\n      .then(response => {\n        // Resolved\n        const today = queryObj.today\n        const responseFileName = `database-copy-${localDateStamp(today)}.csv`\n        fileDownload(response.data, responseFileName)\n        return Promise.resolve({ filename: responseFileName })\n      })\n      .catch(reason => {\n        // Rejected\n        return Promise.reject(reason)\n      })\n  }\n  else {\n    return axios.get(API_URL + 'query', requestConfig)\n      .then(response => {\n        // Resolved\n        return Promise.resolve(response.data)\n      })\n      .catch(reason => {\n        // Rejected\n        return Promise.reject(reason)\n      })\n  }\n}\n\n\nfunction localDateStamp(dateStamp) {\n  return `${moment(dateStamp).format(`YYYY-MM-DD`)}`\n}\n\n\nconst userService = {\n  getUserDbInfo,\n}\n\nexport default userService","import {\n  GET_FILE_START, GET_FILE_SUCCESS, GET_FILE_FAIL, SET_MESSAGE\n} from './types'\nimport UserService from '../services/user.service'\n\n\nexport const getDbFile = (dbQueryObj) => (dispatch) => {\n  dispatch({\n    type: GET_FILE_START,\n  })\n  return UserService.getUserDbInfo(dbQueryObj)\n    .then(data => {\n      // Resolved\n      dispatch({\n        type: GET_FILE_SUCCESS,\n        payload: { filename: data.filename },\n      })\n    })\n    .catch(reason => {\n      // Rejected\n      const message =\n        (reason.response &&\n          reason.response.data &&\n          reason.response.data.message) ||\n        reason.message ||\n        reason.toString()\n\n      dispatch({\n        type: GET_FILE_FAIL,\n      })\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      })\n    }\n  )\n}","export default __webpack_public_path__ + \"static/media/download-icon.a9fa46e4.svg\";","export default __webpack_public_path__ + \"static/media/check-circle-icon.106a5315.svg\";","import {\n  QUERY_INPUT_SET, QUERY_START, QUERY_SUCCESS, QUERY_FAIL, SET_MESSAGE\n} from './types'\nimport UserService from '../services/user.service'\n\n\nexport const setQueryInput = (queryInput) => (dispatch) => {\n  dispatch({\n    type: QUERY_INPUT_SET,\n    payload: { queryInput },\n  })\n}\n\nexport const getQueryResults = (dbQueryObj) => (dispatch) => {\n  dispatch({\n    type: QUERY_START,\n    payload: { query: dbQueryObj},\n  })\n  return UserService.getUserDbInfo(dbQueryObj)\n    .then(data => {\n      // Resolved\n      dispatch({\n        type: QUERY_SUCCESS,\n        payload: { queryResult: data.queryResult },\n      })\n    })\n    .catch(reason => {\n      // Rejected\n      const message =\n        (reason.response &&\n          reason.response.data &&\n          reason.response.data.message) ||\n        reason.message ||\n        reason.toString()\n\n      dispatch({\n        type: QUERY_FAIL,\n      })\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      })\n    }\n  )\n}","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setQueryInput } from '../../../actions/query'\nimport { produce } from 'immer'\nimport { Form } from 'semantic-ui-react'\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel,\n} from 'react-accessible-accordion'\nimport Select from 'react-select'\nimport DatePicker from 'react-datepicker'\n\nimport 'react-accessible-accordion/dist/fancy-example.css'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport '../Query.css'\n\n\nconst daysAgoOptions = [\n  { value: '14', label: '14' },\n  { value: '7',  label: '7' },\n  { value: '6',  label: '6' },\n  { value: '5',  label: '5' },\n  { value: '4',  label: '4' },\n  { value: '3',  label: '3' },\n  { value: '2',  label: '2' },\n  { value: '1',  label: '1' },\n]\n\n\nconst TimeOptions = ({queryInput}) => {\n\n  const { timeOptions } = queryInput\n  const {\n    // yesterday, daysAgo,\n    today, intvlStart, intvlFinal, reportDate, timeSearchSel,\n  } = timeOptions\n  // Although `daysAgo` is not extracted, it is manipulated by the form.\n  // The parameters `today` and `yesterday`, however, are not manipulated.\n  const dispatch = useDispatch()\n\n  const setTimeOption = (selection, value) => {\n    const newQueryInput = produce(queryInput, (draftState) => {\n      draftState.timeOptions[selection] = value\n    })\n    dispatch(setQueryInput(newQueryInput))\n  }\n\n  const timeItems = [{}, {}, {}]\n\n  timeItems[0].uuid = 'byNdays'\n  timeItems[1].uuid = 'byInterval'\n  timeItems[2].uuid = 'byDate'\n  timeItems[0].heading = 'Search by previous N days'\n  timeItems[1].heading = 'Search by date range'\n  timeItems[2].heading = 'Search by date'\n\n  timeItems[0].content =\n    <Form.Field\n      id=\"search-by-prev-N-days\"\n    >\n      <label>\n        <span className=\"input-label\">\n          N:\n        </span>\n        <Select\n          className=\"select\"\n          defaultInputValue=\"7\"\n          //defaultValue=\"7\"\n          //inputValue={daysAgo} // this breaks desired behavior\n          onChange={option => setTimeOption('daysAgo', option.value)}\n          options={daysAgoOptions}\n        />\n      </label>\n    </Form.Field>\n\n  timeItems[1].content =\n    <Form.Field\n      id=\"search-by-date-range\"\n    >\n      <div>\n        <label>\n          <span className=\"input-label\">\n            Start Date:\n          </span>\n          <DatePicker\n            dateFormat=\"yyyy-MM-dd\"\n            selected={intvlStart}\n            onChange={date => setTimeOption('intvlStart', date)}\n            selectsStart\n            startDate={intvlStart}\n            endDate={intvlFinal}\n            // minDate={}\n            maxDate={today}\n          />\n        </label>\n      </div>\n      <div>\n        <label>\n          <span className=\"input-label\">\n            Final Date:\n          </span>\n          <DatePicker\n            dateFormat=\"yyyy-MM-dd\"\n            selected={intvlFinal}\n            onChange={date => setTimeOption('intvlFinal', date)}\n            selectsEnd\n            startDate={intvlStart}\n            endDate={intvlFinal}\n            // minDate={}\n            maxDate={today}\n          />\n        </label>\n      </div>\n    </Form.Field>\n\n  timeItems[2].content =\n    <Form.Field\n      id=\"search-by-date\"\n    >\n      <label>\n        <span className=\"input-label\">\n          Date:\n        </span>\n        <DatePicker\n          dateFormat=\"yyyy-MM-dd\"\n          selected={reportDate}\n          onChange={date => setTimeOption('reportDate', date)}\n          // minDate={}\n          maxDate={today}\n        />\n      </label>\n    </Form.Field>\n\n\n  return (\n    <Accordion\n      preExpanded={timeSearchSel}\n      onChange={expandedUUIDs =>\n        setTimeOption('timeSearchSel', expandedUUIDs)}\n    >\n        {timeItems.map((item) => (\n            <AccordionItem key={item.uuid} uuid={item.uuid}>\n                <AccordionItemHeading>\n                    <AccordionItemButton>\n                        {item.heading}\n                    </AccordionItemButton>\n                </AccordionItemHeading>\n                <AccordionItemPanel>\n                  {item.content}\n                </AccordionItemPanel>\n            </AccordionItem>\n        ))}\n    </Accordion>\n  )\n}\n\nexport default TimeOptions","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setQueryInput } from '../../../actions/query'\nimport { produce } from 'immer'\nimport { Form } from 'semantic-ui-react'\nimport '../Query.css'\n\nconst bayOptionValues = [ 'both', '1', '2' ]\n\n\nconst BayOptions = ({queryInput}) => {\n\n  const { bayOption } = queryInput\n  const dispatch = useDispatch()\n\n  const setBayOption = (value) => {\n    const newQueryInput = produce(queryInput, (draftState) => {\n      draftState.bayOption = value\n    })\n    dispatch(setQueryInput(newQueryInput))\n  }\n\n  return (\n    <Form.Field className=\"boxed\">\n\n      <div className=\"query-sub-title\">\n        Bays\n      </div>\n\n      <div className=\"query-option-space\">\n\n        {bayOptionValues.map((value, index) => (\n          <div className=\"form-check\" key={`bayOption-${index}`}>\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              id={value}\n              checked={bayOption === value}\n              onChange={() => setBayOption(value)}\n            />\n            <label className=\"form-check-label\" htmlFor=\"both\">\n              {value}\n            </label>\n          </div>\n        ))}\n\n      </div>\n\n    </Form.Field>\n  )\n}\n\n\nexport default BayOptions","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setQueryInput } from '../../../actions/query'\nimport { produce } from 'immer'\nimport { Form } from 'semantic-ui-react'\nimport '../Query.css'\n\n\nconst QuantitiesOptions = ({queryInput}) => {\n\n  const { quantities } = queryInput\n  const { netSales, netMoney, vehicles } = quantities\n  const dispatch = useDispatch()\n\n  const toggleQtySel = (category, selection) => {\n    const newQueryInput = produce(queryInput, (draftState) => {\n      draftState.quantities[category][selection] =\n        !draftState.quantities[category][selection]\n    })\n    dispatch(setQueryInput(newQueryInput))\n  }\n\n  const toggleQtyAll = () => {\n    let numSelected = 0\n    for (let qtyObj of Object.values(quantities)) {\n      for (let bool of Object.values(qtyObj)) {\n        numSelected += bool\n      }\n    }\n    const valueForAllQty = numSelected < 8 ? true : false\n    const newQueryInput = produce(queryInput, (draftState) => {\n      for (let [qtyType, qtyObj] of Object.entries(draftState.quantities)) {\n        for (let qty of Object.keys(qtyObj)) {\n          draftState.quantities[qtyType][qty] = valueForAllQty\n        }\n      }\n    })\n    dispatch(setQueryInput(newQueryInput))\n  }\n\n  return (<div>\n    <Form.Field className=\"boxed\">\n\n      <div className=\"query-sub-title\">\n        Quantities\n      </div>\n\n      <div className=\"query-option-space\">\n\n        <div className=\"query-sub-option-space\">\n          <div className=\"query-sub-sub-title\">\n            Net Sales\n          </div>\n          <div className=\"query-sub-sub-list\">\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input checkbox\"\n                type=\"checkbox\"\n                id=\"net-sales\"\n                checked={netSales.combined === true}\n                onChange={() => toggleQtySel('netSales', 'combined')}\n              />\n              <label className=\"form-check-label\" htmlFor=\"net-sales\">\n                combined\n              </label>\n            </div>\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input checkbox\"\n                type=\"checkbox\"\n                id=\"net-sales-cash\"\n                checked={netSales.cash === true}\n                onChange={() => toggleQtySel('netSales', 'cash')}\n              />\n              <label className=\"form-check-label\" htmlFor=\"net-sales-cash\">\n                cash\n              </label>\n            </div>\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input checkbox\"\n                type=\"checkbox\"\n                id=\"net-sales-credit\"\n                checked={netSales.credit === true}\n                onChange={() => toggleQtySel('netSales', 'credit')}\n              />\n              <label className=\"form-check-label\" htmlFor=\"net-sales-credit\">\n                credit\n              </label>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"query-sub-option-space\">\n          <div className=\"query-sub-sub-title\">\n            Net Money\n          </div>\n          <div className=\"query-sub-sub-list\">\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input checkbox\"\n                type=\"checkbox\"\n                id=\"net-money-comb\"\n                checked={netMoney.combined === true}\n                onChange={() => toggleQtySel('netMoney', 'combined')}\n              />\n              <label className=\"form-check-label\" htmlFor=\"net-money-comb\">\n                combined\n              </label>\n            </div>\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input checkbox\"\n                type=\"checkbox\"\n                id=\"net-money-cash\"\n                checked={netMoney.cash === true}\n                onChange={() => toggleQtySel('netMoney', 'cash')}\n              />\n              <label className=\"form-check-label\" htmlFor=\"net-money-cash\">\n                cash\n              </label>\n            </div>\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input checkbox\"\n                type=\"checkbox\"\n                id=\"net-money-credit\"\n                checked={netMoney.credit === true}\n                onChange={() => toggleQtySel('netMoney', 'credit')}\n              />\n              <label className=\"form-check-label\" htmlFor=\"net-money-credit\">\n                credit\n              </label>\n            </div>\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input checkbox\"\n                type=\"checkbox\"\n                id=\"net-money-unref\"\n                checked={netMoney.unRefunded === true}\n                onChange={() => toggleQtySel('netMoney', 'unRefunded')}\n              />\n              <label className=\"form-check-label\" htmlFor=\"net-money-unref\">\n                unrefunded\n              </label>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"query-sub-option-space\">\n          <div className=\"query-sub-sub-title\">\n            Vehicles\n          </div>\n\n          <div className=\"query-sub-multi-list\">\n\n            <div className=\"query-sub-sub-list\">\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input checkbox\"\n                  type=\"checkbox\"\n                  id=\"vhcls-comb\"\n                  checked={vehicles.combined === true}\n                  onChange={() => toggleQtySel('vehicles', 'combined')}\n                />\n                <label className=\"form-check-label\" htmlFor=\"vhcls-comb\">\n                  combined\n                </label>\n              </div>\n            </div>\n\n            <div className=\"query-sub-sub-list\">\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input checkbox\"\n                  type=\"checkbox\"\n                  id=\"vhcls-cash\"\n                  checked={vehicles.cash === true}\n                  onChange={() => toggleQtySel('vehicles', 'cash')}\n                />\n                <label className=\"form-check-label\" htmlFor=\"vhcls-cash\">\n                  cash\n                </label>\n              </div>\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input checkbox\"\n                  type=\"checkbox\"\n                  id=\"vhcls-credit\"\n                  checked={vehicles.credit === true}\n                  onChange={() => toggleQtySel('vehicles', 'credit')}\n                />\n                <label className=\"form-check-label\" htmlFor=\"vhcls-credit\">\n                  credit\n                </label>\n              </div>\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input checkbox\"\n                  type=\"checkbox\"\n                  id=\"vhcls-acc\"\n                  checked={vehicles.account === true}\n                  onChange={() => toggleQtySel('vehicles', 'account')}\n                />\n                <label className=\"form-check-label\" htmlFor=\"vhcls-acc\">\n                  account\n                </label>\n              </div>\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input checkbox\"\n                  type=\"checkbox\"\n                  id=\"vhcls-emp\"\n                  checked={vehicles.employee === true}\n                  onChange={() => toggleQtySel('vehicles', 'employee')}\n                />\n                <label className=\"form-check-label\" htmlFor=\"vhcls-emp\">\n                  employee\n                </label>\n              </div>\n            </div>\n\n            <div className=\"query-sub-sub-list\">\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input checkbox\"\n                  type=\"checkbox\"\n                  id=\"vhcls-w\"\n                  checked={vehicles.works === true}\n                  onChange={() => toggleQtySel('vehicles', 'works')}\n                />\n                <label className=\"form-check-label\" htmlFor=\"vhcls-w\">\n                  works\n                </label>\n              </div>\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input checkbox\"\n                  type=\"checkbox\"\n                  id=\"vhcls-p\"\n                  checked={vehicles.premium === true}\n                  onChange={() => toggleQtySel('vehicles', 'premium')}\n                />\n                <label className=\"form-check-label\" htmlFor=\"vhcls-p\">\n                  premium\n                </label>\n              </div>\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input checkbox\"\n                  type=\"checkbox\"\n                  id=\"vhcls-d\"\n                  checked={vehicles.deluxe === true}\n                  onChange={() => toggleQtySel('vehicles', 'deluxe')}\n                />\n                <label className=\"form-check-label\" htmlFor=\"vhcls-d\">\n                  deluxe\n                </label>\n              </div>\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input checkbox\"\n                  type=\"checkbox\"\n                  id=\"vhcls-e\"\n                  checked={vehicles.express === true}\n                  onChange={() => toggleQtySel('vehicles', 'express')}\n                />\n                <label className=\"form-check-label\" htmlFor=\"vhcls-e\">\n                  express\n                </label>\n              </div>\n            </div>\n\n            <div className=\"query-sub-sub-list\">\n              <div>\n                <button\n                  className=\"query-quantities-toggle-button\"\n                  type=\"button\"\n                  onClick={() => toggleQtyAll()}\n                >\n                  toggle all\n                </button>\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n      </div>\n\n    </Form.Field>\n  </div>)\n\n}\n\n\nexport default QuantitiesOptions","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getQueryResults } from '../../actions/query'\nimport { Form } from 'semantic-ui-react'\nimport './Query.css'\n\nimport TimeOptions       from './QueryFormParts/TimeOptions'\nimport BayOptions        from './QueryFormParts/BayOptions'\nimport QuantitiesOptions from './QueryFormParts/QuantitiesOptions'\n\n/**\n * NOTE: By default, show both aggregates and per-day quantities.\n * TODO: Fix `react-datepicker` click-away problem.  (I want to be able to\n *       click on the label or to the right of the field to click-out.)\n * UPGRADE: Later, import the selection numbers (N days ago) from elsewhere and\n * have it editable by user (ie, enable \"add number\", \"remove number\" from the\n * list).\n * QUESTION: Is this terrible what I'm doing by mixing semantic-ui-react\n *           with other packages?  How can I get the bootstrap ui style?\n */\n\n\nconst QueryForm = ({isQuerying}) => {\n\n  const { queryInput } = useSelector(state => state.query)\n  const dispatch = useDispatch()\n\n  const handleQuery = (e) => {\n    e.preventDefault()\n    dispatch(getQueryResults(queryInput))\n  }\n\n  return (\n    <div className=\"query-section-container\">\n      <Form\n        className=\"query-section\"\n        onSubmit={handleQuery}\n      >\n        <div className=\"side-by-side\">\n          <BayOptions queryInput={queryInput} />\n          <QuantitiesOptions queryInput={queryInput} />\n        </div>\n        <TimeOptions queryInput={queryInput} />\n        <button\n          id=\"submit-query\"\n          type=\"submit\"\n          className=\"btn btn-primary btn-block\"\n          disabled={isQuerying}\n        >\n          Submit\n        </button>\n      </Form>\n    </div>\n  )\n}\n\n\nexport default QueryForm","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { getQueryResults } from '../../actions/query'\n\n\nconst QueryFormExample = ({isQuerying}) => {\n  const [queryExampleInput, setQueryExampleInput] = useState('hi')\n  const dispatch = useDispatch()\n\n  const handleQueryExample = (e) => {\n    e.preventDefault()\n    setQueryExampleInput('hi')\n    dispatch(getQueryResults(queryExampleInput))\n  }\n\n\n  return (\n    <form onSubmit={handleQueryExample}>\n      <button\n        type=\"submit\"\n        className=\"btn btn-primary btn-block\"\n        disabled={isQuerying}\n      >\n        Submit (Example)\n      </button>\n    </form>\n  )\n}\n\nexport default QueryFormExample","import React from 'react'\nimport moment from 'moment'\nimport './Query.css'\n\n// See also notes in QueryForm.js\n/**\n * NOTES:    By default, show both aggregates and per-day quantities.\n *           Some of the display is defined in `database-tools.js` in the\n *           `database-api`.  EG: `qtyTitles` and `qtySubTypeTitles`.\n * TODO:     Fix `react-datepicker` click-away problem.  (I want to be able to\n *           click on the label or to the right of the field to click-out.)\n * UPGRADE: Later, import the selection numbers (N days ago) from elsewhere and\n * have it editable by user (ie, enable \"add number\", \"remove number\" from the\n * list).\n * QUESTION: Is this terrible what I'm doing by mixing semantic-ui-react\n *           with other packages?  How can I get the bootstrap ui style?\n */\n// TODO: turn QuantitiesOptions.js into a more algorithmic display construction\n\n\nconst QueryResult = ({queryResult}) => {\n\n  const resultArr = JSON.parse(queryResult)\n\n  const bayOption  = resultArr[0].content\n  const timeOption = resultArr[1].content\n  const qtyResults = resultArr[2].content\n\n  const bayMessage  = generateBayMessage(bayOption)\n  const timeMessage = generateTimeMessage(timeOption)\n  const qtyDisplay  = getQtyDisplay(qtyResults)\n\n  //    quantities: {\n  //      netSales: {\n  //        combined:   result,  (result or no property here)\n  //        cash:       result,\n  //        credit:     result,\n  //      netMoney: {\n  //        combined:   result,\n  //        cash:       result,\n  //        credit:     result,\n  //        unRefunded: result\n  //      },\n  //      vehicles: {\n  //        combined:   result,\n  //        cash:       result,\n  //        credit:     result,\n  //        account:    result,\n  //        employee:   result,\n  //        works:      result,\n  //        premium:    result,\n  //        deluxe:     result,\n  //        express:    result,\n  //      }\n\n  return (\n    <div className=\"query-section-container\">\n      <div className=\"query-section\">\n        <div className=\"boxed\">\n          <div className=\"query-sub-title\">\n            <span>{bayMessage} -- {timeMessage}</span>\n          </div>\n          <div className=\"query-option-space\">\n            {qtyDisplay}\n            {/* {resultDisplayDeepArr.map((el, i) => (\n                <div key={i}>\n                  <h3>{el.title}</h3>\n                  {el.content[i].content.map((subEl, j) => (<div key={j}>at {i} {j}</div>)\n                  )}\n                </div>\n            ))} */}\n          </div>\n        </div>\n      </div>\n      <hr/>\n      {/* <div>\n        <span>Stringy:</span>\n        {queryResult}\n      </div> */}\n    </div>\n\n  )\n}\n\n\n\nfunction generateBayMessage(bayOption) {\n  let bayMessage\n  switch (bayOption) {\n    case '1':\n      bayMessage = `Bay 1`\n      break;\n    case '2':\n      bayMessage = `Bay 2`\n      break;\n    case 'both':\n      bayMessage = `Bays 1 & 2`\n      break;\n    default:\n      throw new Error('The query parameter ' +\n        '`bayOption` has an unrecognized value.')\n  }\n  return bayMessage\n\n}\n\nfunction generateTimeMessage(timeOption) {\n  let timeMessage\n  const { timeSearchSel, intervalStr: intvl, interval: int } = timeOption\n  switch (timeSearchSel) {\n    case 'byNdays':\n      timeMessage = `for the previous ${timeOption.daysAgo} days...`\n      break;\n    case 'byInterval':\n      timeMessage = `for the ${int.days}-day interval ` +\n        `from ${intvl.start} (${intvl.startwkday}) to ${intvl.final} (${intvl.finalwkday})...`\n      break;\n    case 'byDate':\n      timeMessage = `for the date of ${timeOption.reportDate}...`\n      break;\n    default:\n      throw new Error('The query parameter ' +\n        '`timeSearchSel` has an unrecognized value.')\n  }\n  return timeMessage\n}\n\n\n\nfunction getQtyDisplay(qtyResults) {\n  return qtyResults.map((el, index) => (\n    <div className=\"quantity-sub-division\" key={index}>\n      <div className=\"quantity-sub-title\">\n        {el.title}\n      </div>\n      <div className=\"quantity-sub-content\">\n        <div>\n          {getQtySubContentDisplay(el.content)}\n        </div>\n      </div>\n    </div>\n  ))\n}\n\nfunction getQtySubContentDisplay(arr) {\n  return arr.map((el, index) => (\n    <div className=\"quantity-sub-sub-division\" key={index}>\n      <div className=\"quantity-sub-sub-title\">\n        {el.title}\n      </div>\n      <div className=\"quantity-sub-sub-content\">\n        <div className=\"quantity-sub-sub-net boxed\">\n          {/* NET */}\n          <div className=\"on-top-title\">\n            {el.content[0].title}\n          </div>\n          <div className=\"on-bottom-data\">\n            <div className=\"quantity-sub-sub-sub-division net boxed\" key={index}>\n              {el.content[0].content[0].net}\n            </div>\n          </div>\n        </div>\n        <div className=\"quantity-sub-sub-per-day boxed\">\n          {/* PER DAY */}\n          <div className=\"on-top-title\">\n            {el.content[1].title}\n          </div>\n          <div className=\"on-bottom-data\">\n            {getQtyPerDayDisplay(el.content[1].content)}\n          </div>\n        </div>\n      </div>\n    </div>\n  ))\n}\n\nfunction getQtyPerDayDisplay(arr) {\n  return arr.map((el, index) => (\n    <div className=\"quantity-sub-sub-sub-division per-day\" key={index}>\n      <div className=\"day-title\">\n        {el.reportForWeekday} {abbrSlashDate(el.reportForDate)}\n      </div>\n      <div className=\"day-datum\">\n        {el.netForDay}\n      </div>\n    </div>\n  ))\n}\n\nfunction abbrSlashDate(date) {\n  // date can be a dateObj or a dateStamp string\n  return `${moment(date, 'MM/DD/YYYY').format('M/DD')}`\n}\n\n\nexport default QueryResult","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getDbFile } from '../actions/file'\nimport downloadIcon from '../images/download-icon.svg'\nimport checkmarkIcon from '../images/check-circle-icon.svg'\nimport './Database.css'\n\nimport QueryForm        from './Query/QueryForm'\nimport QueryFormExample from './Query/QueryFormExample'\nimport QueryResult      from './Query/QueryResult'\n\nimport { clientIsInExampleMode } from '../client-mode/mode'\n\n\nconst Database = () => {\n\n  const { user: currentUser } = useSelector((state) => state.auth)\n  const { message } = useSelector(state => state.message)\n  const {\n    isQuerying, queryResult, queryFailed, //query,\n  } = useSelector(state => state.query)\n\n  const today = new Date()\n\n  if (!currentUser) {\n    return <Redirect to=\"/login\" />\n  }\n\n  return (\n    <div className=\"container\">\n\n      <header className=\"jumbotron\">\n        <h3>Database</h3>\n      </header>\n\n      <div className=\"top-matter\">\n        <p>\n          The database contains selected information from the daily email sales\n          reports for your carwash business.\n        </p>\n        <FileInteractor today={today}/>\n        <p>\n          Use the form below to query the database for sales information.\n        </p>\n      </div>\n\n      <hr/>\n\n      <h5>\n        Query Form\n      </h5>\n        {clientIsInExampleMode ? (\n          <QueryFormExample\n            isQuerying={isQuerying}\n          />\n        ) : (\n          <QueryForm\n            isQuerying={isQuerying}\n          />\n        )}\n\n      <hr/>\n\n      {/* <h5>\n        Last Query\n      </h5>\n        {query && (\n          <div>\n            {JSON.stringify(query)}\n          </div>\n        )}\n\n      <hr/> */}\n\n      <h5>\n        Query Results\n      </h5>\n        {/* Have a little popper/hover-info-box that shows this info:\n        // \"netMoneyCalc\" is strictly about (cash & credit) money in vs money out.\n        // netMoneyCalc\n        // = cashNet + creditNet\n        // = (cashIn - cashOut) + (creditIn - creditRefunds)\n        // = (cashIn - cashNotRef - cashOut + creditIn - creditRef) + cashNotRef\n        //              ^ \"cashNotRefunded\" is cash that should have been given back\n        //                to customers but wasn't. This is \"cash in\" that's not\n        //                strictly part of sales, so it must be subtracted to get the\n        //                true sales value.\n        // = salesTotal + cashNotRefunded */}\n        {isQuerying && (\n          <div>\n            <span className=\"spinner-border spinner-border-sm\"></span>\n          </div>\n        )}\n        {queryFailed && message && (\n          <div className=\"alert alert-danger\" role=\"alert\">\n            {message}\n          </div>\n        )}\n        {queryResult && (\n          <QueryResult\n            queryResult={queryResult}\n          />\n        )}\n\n      <hr/>\n\n    </div>\n  )\n}\n\n\n\nfunction FileInteractor({today}) {\n\n  const { message } = useSelector(state => state.message)\n  const { isGettingFile, filename, getFileFailed } = useSelector(state => state.file)\n  const dispatch = useDispatch()\n\n  const getDatabaseFile = async () => {\n    dispatch(getDbFile({ getDbFile: true, today }))\n  }\n\n  return (\n    <div className=\"paragraph-like\">\n      {!isGettingFile && (\n        <img\n          onClick={() => getDatabaseFile()}\n          src={downloadIcon} alt=\"Download CSV\" className=\"icon-space clicky\"\n        />\n      )}\n      {isGettingFile && (\n        <span\n          className=\"spinner-border spinner-border-sm icon-space\">\n        </span>\n      )}\n      Generate and download a CSV file copy of the contents of the database.\n      {!isGettingFile && filename && (\n        <div>\n          <img\n            src={checkmarkIcon} alt=\"Download CSV\" className=\"icon-space\"\n          />\n          <span>Downloaded file: {filename}</span>\n        </div>\n      )}\n      {getFileFailed && message && (\n        <div className=\"alert alert-danger reduced-space\" role=\"alert\">\n          {message}\n        </div>\n      )}\n    </div>\n  )\n}\n\n\nexport default Database","import React from \"react\"\nimport { Redirect } from 'react-router-dom'\nimport { useSelector } from \"react-redux\"\nimport './Profile.css'\n\n\nconst Profile = () => {\n  const { user: currentUser } = useSelector((state) => state.auth)\n\n  if (!currentUser) {\n    return <Redirect to=\"/login\" />\n  }\n\n  return (\n    <div className=\"container\">\n\n      <header className=\"jumbotron\">\n        <h3>User Profile</h3>\n      </header>\n\n      <div className=\"top-matter\">\n        <p>\n          <strong>Id:</strong> {currentUser.id}\n        </p>\n        <p>\n          <strong>Username:</strong> {currentUser.username}\n        </p>\n        {/* <p>\n          <strong>Token:</strong> {currentUser.accessToken.substring(0, 20)}\n          {\" \"}...{\" \"}\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n        </p> */}\n      </div>\n\n    </div>\n  )\n}\n\nexport default Profile","import React from \"react\"\nimport { Redirect } from 'react-router-dom'\nimport { useSelector } from \"react-redux\"\nimport './About.css'\n\n\nconst About = () => {\n  const { user: currentUser } = useSelector((state) => state.auth)\n\n  if (!currentUser) {\n    return <Redirect to=\"/login\" />\n  }\n\n  return (\n    <div className=\"container\">\n\n      <header className=\"jumbotron\">\n        <h3>About</h3>\n      </header>\n\n      <div className=\"top-matter\">\n\n\n        <h4>The App</h4>\n\n        <div className=\"indent\">\n\n        <p>EDAPT = Email-Data Assistant &amp; Processor Tool</p>\n\n        <p>A Web-App for Data Ingestion via Email and Data Viewing &amp;\n          Downloading via Website</p>\n\n        <ul>\n          <li> <span className=\"li-title\">The Problem</span>\n            <span className=\"li-content\">\n              If you have regularly-generated data-containing email messages\n              that you'd like to have automatically processed so that you can\n              easily query the data and download it in a form that's convenient\n              for displaying in a spreadsheet, then you need a tool like EDAPT.\n            </span>\n          </li>\n          <li> <span className=\"li-title\">The Solution</span>\n            <span className=\"li-content\">\n              EDAPT continually retrieves data from regularly-generated\n              data-containing email messages (via Gmail), parses the email\n              messages to extract the data, ingests that data into a (MySQL)\n              database, allows queries by website graphical user interface\n              (GUI), and allows downloading the contents of the database in the\n              form of a CSV (comma-separated-values) file.\n            </span>\n          </li>\n          <li> <span className=\"li-title\">Example</span>\n            <span className=\"li-content\">\n              EDAPT is particularly useful for people operating an automated\n              self-serve business (such as a car wash) that has auto-generated\n              (sales report) data sent by email on a daily basis.\n            </span>\n          </li>\n        </ul>\n\n        </div>\n\n\n        <h4>The Tech</h4>\n\n        <div className=\"indent\">\n\n        <p>Here are the main technologies involved in the internals and\n          infrastructure for running EDAPT:</p>\n\n        <ul>\n          <li> <span className=\"li-title\">Content-Display</span>\n            <span className=\"li-content\">\n              <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML\">HTML</a>,\n              {' '} <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS\">CSS</a>, {' '}\n              <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript\">JavaScript/JS</a>\n              {' '} / <a href=\"https://tc39.es/ecma262/\">ECMAScript</a>,\n              {' '} <a href=\"https://reactjs.org/\">React</a>,\n              {' '} <a href=\"https://redux.js.org/\">Redux</a>\n            </span>\n          </li>\n          <li> <span className=\"li-title\">Data</span>\n            <span className=\"li-content\">\n              <a href=\"https://www.mysql.com/\">MySQL</a>,\n              {' '} <a href=\"https://sequelize.org/\">Sequelize</a>\n            </span>\n          </li>\n          <li> <span className=\"li-title\">Email</span>\n            <span className=\"li-content\">\n              <a href=\"https://en.wikipedia.org/wiki/Gmail\">Gmail</a>,\n              {' '} <a href=\"https://cloud.google.com/\">Google Cloud Platform</a>,\n              {' '} <a href=\"https://github.com/googleapis/google-api-nodejs-client\">Google APIs</a>,\n              {' '} <a href=\"https://developers.google.com/gmail/api\">Gmail API</a>\n            </span>\n          </li>\n          <li> <span className=\"li-title\">App-Security</span>\n            <span className=\"li-content\">\n              JSON web tokens\n              (<a href=\"https://www.npmjs.com/package/jsonwebtoken\">jsonwebtoken</a>),\n              {' '} <a href=\"https://developers.google.com/identity/protocols/oauth2\">OAuth2</a>\n            </span>\n          </li>\n          <li> <span className=\"li-title\">App-Server</span>\n            <span className=\"li-content\">\n              <a href=\"https://nodejs.org/en/\">Node</a>,\n              {' '} <a href=\"https://expressjs.com/\">Express</a>\n            </span>\n          </li>\n          <li> <span className=\"li-title\">Optional Infrastructure</span>\n            <span className=\"li-content\">\n              Web-Server system (eg, a {' '}\n              <a href=\"https://www.gnu.org/software/software.html\">GNU</a>/\n              <a href=\"https://en.wikipedia.org/wiki/Linux\">Linux</a> {' '}\n              virtual server such as {' '}\n              <a href=\"https://ubuntu.com/download/server\">Ubuntu server</a> in\n              a virtual machine provided by a web-hosting / cloud-service\n              company such as {' '}\n              <a href=\"https://www.digitalocean.com/\">DigitalOcean</a>)\n            </span>\n          </li>\n          <li> <span className=\"li-title\">Optional Web-Server &amp; Managers</span>\n            <span className=\"li-content\">\n              <a href=\"https://nginx.org/en/\">Nginx</a> (web-server application\n              using reverse proxy),\n              {' '} <a href=\"https://pm2.keymetrics.io/\">PM2</a> (process\n              manager), <a href=\"https://github.com/systemd/systemd\">systemd</a>\n              {' '} (system &amp; service manager)\n            </span>\n          </li>\n          <li> <span className=\"li-title\">Optional Web Security</span>\n            <span className=\"li-content\">\n              firewall\n              (<a href=\"https://help.ubuntu.com/community/UFW\">ufw</a>), {' '}\n              <a href=\"https://en.wikipedia.org/wiki/HTTPS\">HTTPS</a>, {' '}\n              <a href=\"https://letsencrypt.org/\">LetsEncrypt</a> {' '}\n              <a href=\"https://certbot.eff.org/\">Certbot</a> {' '}\n              (auto-renewal of SSL certificates)\n            </span>\n          </li>\n        </ul>\n\n        </div>\n\n\n        <h4>The Developer</h4>\n\n        <div className=\"indent\">\n\n        <ul>\n          <li> <a href=\"https://github.com/oneforawe\">Andrew Forrester</a>\n          </li>\n        </ul>\n\n        </div>\n\n\n        <div className=\"bottom-spacing\"/>\n\n\n      </div>\n\n    </div>\n  )\n}\n\nexport default About","import React from \"react\"\nimport { Redirect } from 'react-router-dom'\nimport { useSelector } from \"react-redux\"\n\nconst NotFound = () => {\n  const { user: currentUser } = useSelector((state) => state.auth)\n\n  if (!currentUser) {\n    return <Redirect to=\"/login\" />\n  }\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        <h3>\n          Error 404\n        </h3>\n      </header>\n      <p>\n        <strong>Page Not Found</strong>\n      </p>\n      <p>\n        Use navigation bar to continue.\n      </p>\n    </div>\n  )\n}\n\nexport default NotFound","import { createBrowserHistory } from 'history'\n\nexport const history = createBrowserHistory()","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Router, Switch, Route, Link } from 'react-router-dom'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\n\nimport Login    from './components/Login'\nimport Database from './components/Database'\nimport Profile  from './components/Profile'\nimport About    from './components/About'\nimport NotFound from './components/NotFound'\n\nimport { logout } from './actions/auth'\nimport { clearMessage } from './actions/message'\n\nimport { history } from './helpers/history'\n\n\nconst App = () => {\n\n  const { user: currentUser } = useSelector((state) => state.auth)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    history.listen((location) => {\n      dispatch(clearMessage()) // clear message when changing location\n    })\n  }, [dispatch])\n\n  const logOut = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <Router history={history}>\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n\n          <div className=\"navbar-brand\">\n            EDAPT\n          </div>\n\n          {currentUser ? (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={'/database'} className=\"nav-link\">\n                  Database\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to={'/profile'} className=\"nav-link\">\n                  Profile\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to={'/about'} className=\"nav-link\">\n                  About\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\n                  LogOut\n                </a>\n              </li>\n            </div>\n          ) : (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={'/login'} className=\"nav-link\">\n                  LogIn\n                </Link>\n              </li>\n            </div>\n          )}\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/login\"]} component={Login} />\n            <Route exact path=\"/database\" component={Database} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route exact path=\"/about\" component={About} />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  )\n}\n\nexport default App","import { SET_MESSAGE, CLEAR_MESSAGE } from './types'\n\n\nexport const setMessage = (message) => ({\n  type: SET_MESSAGE,\n  payload: message,\n})\n\nexport const clearMessage = () => ({\n  type: CLEAR_MESSAGE,\n})","import { LOGIN_START, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from '../actions/types'\n\n\nconst user = JSON.parse(localStorage.getItem('user'))\n\nconst initialState = user\n  ? { isLogginIn: false, isLoggedIn: true, user }\n  : { isLogginIn: false, isLoggedIn: false, user: null }\n\n\nexport default function auth(state = initialState, action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case LOGIN_START:\n      return {\n        ...state,\n        isLoggingIn: true,\n      }\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggingIn: false,\n        isLoggedIn: true,\n        user: payload.user,\n      }\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        isLoggingIn: false,\n        isLoggedIn: false,\n        user: null,\n      }\n    case LOGOUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      }\n    default:\n      return state\n  }\n}","import { SET_MESSAGE, CLEAR_MESSAGE } from '../actions/types'\n\n\nconst initialState = {}\n\nexport default function message(state = initialState, action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload }\n\n    case CLEAR_MESSAGE:\n      return { message: '' }\n\n    default:\n      return state\n  }\n}","import { GET_FILE_START, GET_FILE_SUCCESS, GET_FILE_FAIL } from '../actions/types'\n\n\nconst initialState = {\n  isGettingFile: false,\n  filename: null,\n  getFileFailed: false,\n}\n\nexport default function file(state = initialState, action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case GET_FILE_START:\n      return {\n        ...state,\n        isGettingFile: true,\n        filename: null,\n        getFileFailed: false,\n      }\n    case GET_FILE_SUCCESS:\n      return {\n        ...state,\n        isGettingFile: false,\n        filename: payload.filename,\n      }\n    case GET_FILE_FAIL:\n      return {\n        ...state,\n        isGettingFile: false,\n        getFileFailed: true,\n      }\n    default:\n      return state\n  }\n}","import { clientIsInDemoMode } from '../client-mode/mode'\n\n\n// Could have / should have used an array structure instead. See example below.\nconst quantitiesInit = {\n    netSales: {\n      combined: true,  cash: false, credit: false,\n    },\n    netMoney: {\n      combined: true, cash: false, credit: false, unRefunded: true,\n    },\n    vehicles: {\n      combined: true,\n      cash: false, credit: false, account: false, employee: false,\n      works: false, premium: false, deluxe: false, express: false,\n    },\n}\n\n// Alternative array structure for quantities:\n//\n// const quantitiesInit = [\n//   {\n//     title: 'Net Sales',\n//     content: [\n//       { title: 'combined', content: true  },\n//       { title: 'cash',     content: false },\n//       { title: 'credit',   content: false },\n//     ],\n//   },\n//   {\n//     title: 'Net Money',\n//     content: [\n//       { title: 'combined',   content: false },\n//       { title: 'cash',       content: false },\n//       { title: 'credit',     content: false },\n//       { title: 'unrefunded', content: true  },\n//     ],\n//   },\n//   {\n//     title: 'Vehicles',\n//     content: [\n//       { title: 'combined', content: true  },\n//       { title: 'cash',     content: false },\n//       { title: 'credit',   content: false },\n//       { title: 'account',  content: false },\n//       { title: 'employee', content: false },\n//       { title: 'works',    content: false },\n//       { title: 'premium',  content: false },\n//       { title: 'deluxe',   content: false },\n//       { title: 'express',  content: false },\n//     ],\n//   },\n// ]\n\n\nfunction getDemoTimeInit() {\n\n  const demoToday = new Date('7/25/21')\n  let demoYesterday = new Date(demoToday)\n  let demoWeekAgo = new Date(demoToday)\n  demoYesterday.setDate(demoToday.getDate() - 1)\n  demoWeekAgo.setDate(demoToday.getDate() - 7)\n\n  const demoTimeOptionsInit = {\n    today: demoToday, // not mod'd by user/form, used by back-end server query\n    yesterday: demoYesterday, // ditto\n    daysAgo: '7',\n    intvlStart: demoWeekAgo,\n    intvlFinal: demoYesterday,\n    reportDate: demoYesterday,\n    timeSearchSel: ['byNdays'],\n  }\n\n  return demoTimeOptionsInit\n}\n\n\nconst today = new Date()\nlet yesterday = new Date(today)\nlet weekAgo = new Date(today)\nyesterday.setDate(today.getDate() - 1)\nweekAgo.setDate(today.getDate() - 7)\n\nlet timeOptionsInit = {\n  today,     // not modified by user/form, used by back-end server query\n  yesterday, // not modified by user/form, used by back-end server query\n  daysAgo: '7',\n  intvlStart: weekAgo,\n  intvlFinal: yesterday,\n  reportDate: yesterday,\n  timeSearchSel: ['byNdays'],\n}\n\nif (clientIsInDemoMode) { timeOptionsInit = getDemoTimeInit() }\n\n\nconst queryInputInit = {\n  bayOption: 'both',\n  quantities: quantitiesInit,\n  timeOptions: timeOptionsInit,\n}\n\n\nexport default queryInputInit","import {\n  QUERY_INPUT_SET, QUERY_START, QUERY_SUCCESS, QUERY_FAIL\n} from '../actions/types'\nimport queryInputInit from './queryInputInit'\n\n\nconst initialState = {\n  queryInput: queryInputInit,\n  isQuerying: false,\n  query: null,\n  queryResult: null,\n  queryFailed: false,\n}\n\n\nexport default function query(state = initialState, action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case QUERY_INPUT_SET:\n      return {\n        ...state,\n        queryInput: payload.queryInput,\n      }\n    case QUERY_START:\n      return {\n        ...state,\n        isQuerying: true,\n        query: payload.query,\n        queryResult: null,\n        queryFailed: false,\n      }\n    case QUERY_SUCCESS:\n      return {\n        ...state,\n        isQuerying: false,\n        queryResult: payload.queryResult,\n      }\n    case QUERY_FAIL:\n      return {\n        ...state,\n        isQuerying: false,\n        queryFailed: true,\n      }\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport auth from './auth'\nimport message from './message'\nimport file from './file'\nimport query from './query'\n\nexport default combineReducers({\n  auth,\n  message,\n  file,\n  query,\n})","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\n\nexport default store","import reportWebVitals from './reportWebVitals'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Helmet, HelmetProvider } from 'react-helmet-async'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css'\n\nlet basedomain\nconst domain = global.location.hostname\nconst domainArray = domain.split('.')\nif (domainArray.length > 1) {\n  basedomain = domainArray.splice(-2)[0]\n}\nelse {\n  basedomain = domainArray[0]\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <HelmetProvider>\n      <Helmet>\n        <title>EDAPT @ {basedomain}</title>\n      </Helmet>\n    </HelmetProvider>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()","const clientIsInExampleMode = false\nconst clientIsInDemoMode = true\n\n\nconst clientModeExports = { clientIsInExampleMode, clientIsInDemoMode }\n\nmodule.exports = clientModeExports","export const LOGIN_START   = 'LOGIN_START'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAIL    = 'LOGIN_FAIL'\n\nexport const LOGOUT = 'LOGOUT'\n\nexport const SET_MESSAGE   = 'SET_MESSAGE'\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE'\n\nexport const GET_FILE_START   = 'GET_FILE_START'\nexport const GET_FILE_SUCCESS = 'GET_FILE_SUCCESS'\nexport const GET_FILE_FAIL    = 'GET_FILE_FAIL'\n\nexport const QUERY_INPUT_SET = 'QUERY_INPUT_SET'\nexport const QUERY_START   = 'QUERY_START'\nexport const QUERY_SUCCESS = 'QUERY_SUCCESS'\nexport const QUERY_FAIL    = 'QUERY_FAIL'","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n"],"sourceRoot":""}